<?xml version="1.0" encoding="ISO-8859-1"?>

<beans  xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:p="http://www.springframework.org/schema/p"
        xmlns:util="http://www.springframework.org/schema/util"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
                            http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
                            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd"
>
    <!-- Declare property file locations -->
    <context:property-placeholder location="classpath:workbench.properties,classpath:c3p0.properties" />

    <context:component-scan base-package="org.generationcp.ibpworkbench.rest" />
    
    <context:annotation-config />
    
    <context:load-time-weaver />

    <bean id="cloner" class="com.rits.cloning.Cloner"/>

    <bean id="breedingViewService" class="org.generationcp.ibpworkbench.service.BreedingViewServiceImpl">
    </bean>
    
    <bean id="workbenchDataSource" class = "com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${workbench.driver}" />
        <property name="jdbcUrl" value="${workbench.url}" />
        <property name="user" value="${workbench.username}" />
        <property name="password" value="${workbench.password}" /> 

        <!-- C3P0 properties -->
        <property name="minPoolSize" value="${c3p0.minPoolSize}" />
        <property name="maxPoolSize" value="${c3p0.maxPoolSize}" />
        <property name="debugUnreturnedConnectionStackTraces" value="${c3p0.debugUnreturnedConnectionStackTraces}" />
        <property name="unreturnedConnectionTimeout" value="${c3p0.unreturnedConnectionTimeout}" />
        <property name="maxConnectionAge" value="${c3p0.maxConnectionAge}" />
        <property name="maxIdleTime" value="${c3p0.maxIdleTime}" />
        <property name="preferredTestQuery" value="${c3p0.preferredTestQuery}" />
        <property name="testConnectionOnCheckout" value="${c3p0.testConnectionOnCheckout}" />
 	</bean>
    
    <bean id="workbenchSessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="workbenchDataSource"/>
        <property name="configLocation" value="classpath:ibpmidware_hib.cfg.xml"/>
    </bean>
    
    <bean id="workbenchHibernateSessionProvider" class="org.generationcp.middleware.hibernate.HibernateSessionPerRequestProvider" scope="request"  destroy-method="close">
        <property name="sessionFactory" ref="workbenchSessionFactory"/>
        
        <!-- JDK Standard Proxy around this request scoped bean, so we can use it on longer scoped beans -->
        <aop:scoped-proxy proxy-target-class="false"/>
    </bean>
    
     <bean id="workbenchDataManager"
        class="org.generationcp.middleware.manager.WorkbenchDataManagerImpl" destroy-method="close">
        <constructor-arg ref="workbenchHibernateSessionProvider" />
    </bean>
    
     <bean id="managerFactoryProvider" 
    	class="org.generationcp.commons.hibernate.DynamicManagerFactoryProvider"  destroy-method="closeAllSessionFactories">
    	<constructor-arg ref="workbenchDataManager" />
    	<property name="maxCachedSessionFactories" value="1" />
    	<property name="dbPort" value="${workbench.port}" />
    	<property name="dbHost" value="${workbench.host}" />
    	<property name="dbUsername" value="${workbench.username}"/>
        <property name="dbPassword" value="${workbench.password}"/>
    </bean>
    
    <bean id="managerFactory" name="managerFactory"
    	factory-bean="managerFactoryProvider"
    	factory-method="createInstance"
    	scope="request" destroy-method="close">
    	<aop:scoped-proxy/>
    </bean>

    <bean id="studyDataManager" 
    	factory-bean="managerFactory"
    	factory-method="getNewStudyDataManager" 
    	scope="request">
    	<aop:scoped-proxy/>
    </bean>
    
    <bean id="ontologyDataManager" 
    	factory-bean="managerFactory"
    	factory-method="getNewOntologyDataManager"
    	scope="request">
    	<aop:scoped-proxy/>
    </bean>
    
    <bean id="springAppContextProvider" class="org.generationcp.commons.util.SpringAppContextProvider"></bean>
    
</beans>