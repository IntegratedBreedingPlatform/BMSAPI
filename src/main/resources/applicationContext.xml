<?xml version="1.0" encoding="ISO-8859-1"?>

<beans  xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:p="http://www.springframework.org/schema/p"
        xmlns:util="http://www.springframework.org/schema/util"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
                            http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
                            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd"
>
    <context:component-scan base-package="org.generationcp.ibpworkbench.rest" />
    
    <context:annotation-config />
    
    <context:load-time-weaver />

    <bean id="cloner" class="com.rits.cloning.Cloner"/>

    <bean id="breedingViewService" class="org.generationcp.ibpworkbench.service.BreedingViewServiceImpl"/>
    
    
    <bean id="workbenchHibernateSessionProvider" class="org.generationcp.middleware.hibernate.HibernateSessionPerRequestProvider">
        <property name="sessionFactory" ref="WORKBENCH_SessionFactory"/>
        
        <!-- JDK Standard Proxy around this request scoped bean, so we can use it on longer scoped beans -->
        <aop:scoped-proxy proxy-target-class="false"/>
    </bean>
    
     <bean id="workbenchDataManager"
        class="org.generationcp.middleware.manager.WorkbenchDataManagerImpl" destroy-method="close">
        <constructor-arg ref="workbenchHibernateSessionProvider" />
    </bean>
    
     <bean id="managerFactoryProvider" 
    	class="org.generationcp.commons.hibernate.DynamicManagerFactoryProvider"  destroy-method="closeAllSessionFactories">
    	<constructor-arg ref="workbenchDataManager" />
    	<property name="maxCachedSessionFactories" value="10" />
    	<property name="dbPort" value="${workbench.port}" />
    	<property name="dbHost" value="${workbench.host}" />
    	<property name="dbUsername" value="${workbench.username}"/>
        <property name="dbPassword" value="${workbench.password}"/>
    </bean>
    
    <bean id="managerFactory" name="managerFactory"
    	factory-bean="managerFactoryProvider"
    	factory-method="createInstance"
    	scope="request" destroy-method="close">
    	<aop:scoped-proxy/>
    </bean>

    <bean id="studyDataManager" 
    	factory-bean="managerFactory"
    	factory-method="getNewStudyDataManager" 
    	scope="request">
    	<aop:scoped-proxy/>
    </bean>
    
    <bean id="ontologyDataManager" 
    	factory-bean="managerFactory"
    	factory-method="getNewOntologyDataManager"
    	scope="request">
    	<aop:scoped-proxy/>
    </bean>
    
    <bean id="importService" class="org.generationcp.commons.service.impl.BreedingViewImportServiceImpl" scope="request">
    	<constructor-arg index="0" ref="studyDataManager"/>
    	<constructor-arg index="1" ref="ontologyDataManager"/>
    	<aop:scoped-proxy/>
    </bean>
    
    <bean id="springAppContextProvider" class="org.generationcp.commons.util.SpringAppContextProvider"></bean>
    
</beans>